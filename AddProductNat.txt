public class AddProductPaneController implements Initializable {

    @FXML
    private Label barcodeLabel;
    @FXML
    private Label nameLabel;
    @FXML
    private Label qtyLabel;
    @FXML
    private Label priceLabel;
    @FXML
    private TextField barcodeTextField;
    @FXML
    private TextField nameTextField;
    @FXML
    private TextField qtyTextField;
    @FXML
    private TextField priceTextField;

    /**
     * Initializes the controller class.
     */
    @Override
    public void initialize(URL url, ResourceBundle rb) {
        
        nomeTxt.textProperty().addListener(new ChangeListener<String>() {  
            @Override
            public void changed(ObservableValue<? extends String> observable, String oldValue, String newValue) {
                if (!newValue.matches("\\d*")) {
                nomeTxt.setText(newValue.replaceAll("[^\\d]", ""));
                }
            }
        });
        
        prezzoTxt.textProperty().addListener(new ChangeListener<String>() {
            @Override
            public void changed(ObservableValue<? extends String> observable, String oldValue, String newValue) {
                if (!newValue.matches("\\d*")) {
                prezzoTxt.setText(newValue.replaceAll("[^\\d]", ""));
                }
            }
        });
        
        
    }    

    @FXML
    private void addMenuDishBtnClicked(ActionEvent event) {
        
        //controllo che siano stati inseriti tutti i campi
        if(nomeTxt.getText().isEmpty() || prezzoTxt.getText().isEmpty() ){
            
            System.out.println("campo vuoto");
        }else{
		String nameDish = nameTextField.getText();
            	int price = Integer.parseInt(priceTxt.getText());
           
            

            Menu m = new Menu(nameDish, price);
            ControllerForView.getInstance().save(m);
            System.out.println("aggiunto");
        }
        
        
    }
    
    
    
}
